
ALWAYS ON
=========
- Create Manual Pages
- Cleanup console.log() and System.out.println()
- Localize
- Check special chars like äöüÄÖÜ in localization property files
- Check Copyrights
- Test Cases
- Test with cache enabled


IMPORTANT FIXES / NEXT TODOS
=============================
- Query: Set Command
- Query: Stats Command
- Query: Save and Manage queries
- 


H2 Database Migration v1.4.2 to v2.0.206
=========================================
Before migrating
1. Make a copy of the database and connect to the copy.
2. Delete CFW_CPUSAMPLE* Tables, also if not important for you CFW_NOTIFICATION
3. Execute SQL command "SCRIPT" to create statements.
4. Save the results as to a file.
5. Cleanup file format, in case of DBeaver text export:
   - Regex Replace "; *?\|\r\n\|" with "; \r\n"
   - Replace "¶" with " "  
   - Regex Replace "(?<=CREATE CACHED TABLE)(.*) ARRAY" with "\1VARCHAR ARRAY"
6. Array Format: On create table statements, replace "ARRAY" with "VARCHAR ARRAY"
7. This file is your SQL Batch File to setup the new database

Migrate your Application, afterwards:
1. Connect to the new database
2. Delete all existing Tables.
3. Execute your SQL Batch file, check if the errors are an issue.
4. Restart the Application, check log file for errors

Potential TODOs
===============

- Features: Automator: Just Actions that can be triggered from the UI.
  - Create Default Dashboards for xyz
  - Send Mails
  - Cleanup Actions

- Features: Spaces
  - HTML Selector
  - SpacePermissions in SessionData
  - Selected Space in SessionData
  - CFWSQL partial query, select entries for user

- Jobs: Log Job Executions to DB, plus age out.
- Jobs: Define max number of instances.

- Dashboard: Check Settings - Provide a bulk action to show all settings of all widgets as an overview. 
- Dashboard: Text Alignment
- Dashboard: Merge forms, only one button.
- Dashboard: Widget Fullscreen
- Dashboard: Favorites
- Dashboard: Fit Squeeze
- Dashboard: Filter Widgets
- Dashboard: Check if resizing/dragging is possible on mobile.
- Dashboard: Default Error / No Access Tile
- Dashboard: Default No Data Tile
- Dashboard: Add Anchor Chooser to Image Widget
- Dashboard: Add format to reload time widget
- Dashboard: Console with Logs
- Dashboard: Fix Replica Ctrl+Z on Duplicate
- Dashboard: Timeframe Picker - show Timeframe instead of "Custom Time"
- Dashboard: Timeframe Picker - List of Recent

- Dashboard Parameters: Form initialization: filter as well by form or formID to not mess with params with same name/ID

- Widget: CSV Chart
- Widget: Cards
- Widget: Panels
- Widget: Website Checker HTMLUnit
- Widget: Partial HTML Extractor
- Widget: Nest other Dashboard
- Widget: Fontawesome Icon 
- Widget: Current Time Widget
- Widget: Collaboration: Chat
- Widget: Collaboration: Logbook

- Charts Renderer: Add description to manual page "working with render".

- cfw.js: Create Value-Renderer, only show value in tile.
- cfw.js: Finish javascript CFWFormField
- cfw.js: Add Tic Tac Toe Loader for Long running requests
- cfw.js: Progress Bar Loader

- Security: Enable Decryption for ResultSet to JSON on CFWSQL
- Security: Change login to two steps, first username, then password field 

- Manual: Functionality - Multi language pages
- Manual: Fulltext Search

- DB: Reindex Fulltext-Search
- DB: Add Feature to change connection pool limits for managed connection pools
- DB: Prometheus DB Pool statistics

- CFW: CFWApplicationExecutor - ForwardedRequestCustomizer make it work with reverse proxy
- CFW: Create javascript sanity check page
- CFW: CPU Sampling, add Charts
- CFW: Cleanup tasks for TageSelector references 
- CFW: Locales - Handle Global Locales separately
- CFW: Locales - Create System Analytics page showing all locale properties
- CFW: Config - Age Out Configuration
- CFW: API - Enable Post Body Inputs
- CFW: Improve CFWHTTP.getClientIP()

- CFWMail: Add default CSS to eMails(e.g. displaying borders for tables) 
- CFWField: Add initFormField(method)
- CFWField: Form errors add to field.
  
- Image Upload for Summernote Editor
- Truncate too long toasts.
- Create Record Requests / Replay for Performance Tests

- Custom Error page CFW.App.createErrorHandler();

- Test: Jobs & Tasks
- Test: Dashboard Parameters
- Test: CFWSQL
- Test: CFWSQL Lucene Query
- Test: Authentication
- Test: CFWForm & Multiform
- Test: ResultSetUtils
- Test: Javascript?
- Test: Mail?
- Test: Servlets?

DONE
====
------- current -------
- BREAKING CHANGE: Added 1 minute cache for widget data.
- CFWField: Prevent autofill of password fields in forms
- Timeframe Picker: Added custom Relative Offset
- Job Task Widget Executor: Added timeframe picker tho handle time placeholders like $earliest and $latest
- H2: Upgraded to 2.1.212
- gridstack.js: upgraded from v0.6.0 to v5.1.0
- Tiles Renderer: Made popup configurable
- Renderer: Added Status Bar Renderer
- Renderer: Added Status Map Renderer
- Renderer: Added Status List Renderer
- Widget Settings: Added option to define title position(top, left)
- Chart Renderer: Sorting datasets to avoid displaying issues
- Dashboard: Added Permission to allow Users to refresh dashboard every minute 
- Dashboard: Fixed destruction of widget layout, resizing window width to change into 1 column layout disabled
- Dashboard: Added Javascript Widget
- Config: Added Password Policy Settings
- Query: Added new renderers to Query
- Query: Make results 100% height in dashboard widget
- Query: Added chart Command
- Query: Added Functions feature to query framework
- Query: added functions: encode, if, length, nullto, substring, trim

------- v6.0.0 -------
- New Feature - Query: Domain Specific Language(DSL) to fetch, process and format data from various sources
- New Feature - Notification: Added Notification mechanism to notify user in the UI. Bell icon added to the Menu Bar 
- BREAKING CHANGE - H2 Migration: bumped from v1.4.200 to 2.0.206
- Migrated jQuery from 3.4.1 to 3.6.0
- Migrated highlight.js from v9 to v11
- Migrated Guava from v30.0 to v31.0
- Notifications: Added Startup Notifications for Admins and Superusers
- Alerting: Added Channel for Notifications
- Dashboard: Added option to make dashboards publicly available(public url, no user login needed).
- Dashboard: Added Copy Action to Widgets, can be Pasted to other dashboards using Ctrl-V
- Menu: Fixed Display issue for Navbar Buttons(Manual) when menu is collapsed on narrow displays 
- ContextSettings: Added method to fetch by user and type
- Javascript Renderer: Added sorting mechanism.
- Context Settings: Use Dataviewer for display
- JDBC Drivers: Added Configuration Item to specify custom driver classes, added default validation Query to avoid AbstractMethodError for isValid()
- Autocomplete: Added support to trigger with Control+Space, option to define title for item lists
- Dataviewer: Fixed issue with quotes in filter
- JS Renderer: Added support for custom colors without the need to use CFW color classes
- Properties: added cfw_jvm_timezone=UTC for H2 to handle time properly

------- v5.0.0 -------
- Mailing: Added Class CFWMailBuilder for creating eMails.
- Dashboard: Security Improvement - Use data from server side instead from client side.
- Dashboard Widgets: Added caching for widget data.
- Dashboard: Parameters working better, also applied in autocomplete of edit widget forms and parameter widget.
- Authentication - LDAP: Load user details from LDAP if the do not exists in the database.
- Reflection: Replaced with ServiceLoader as it is more stable between different Java versions
- Scripting: Migrated Javascript Engine from Nashorn to Graal to be able to run under higher Java Versions.
- CFWField: Added FormFieldType.CHECKBOXES
- Menu Title: Added configuration option to prepend menu title to window title
- Tasks: Added Task to test eMail setup
- Jobs: Added Utilities to do Alerting.
- Jobs: Task Selection shows now a table with the task description.
- Properties: added config "cfw_application_url" to be able to add links to mails.
- API: Added Default Create API
- CSV Renderer: CSV Supports foreground and background color
- CSV Renderer: Table makes buttons smaller when narrow is true
- User Management: Use Dataviewer for Groups/Roles/Permissions toggle table 
- Dataviewer Renderer: Added Sortby-Field
- FulltextSearch: wrapped Lucene Query in SELECT to make further  WHERE clauses more stable
- CFWSQL: Added method for default pagination
- /metrics: Fixed session count for API calls 
- Tiles: Fixed size factor set to 0.1 when loaded and whole number was selected
- Sessions: Added cleanup of stored session on app startup to avoid issues.

------- v4.0.0 -------
- Startup Mode: added property cfw_mode to cfw.properties, start application as FULL, APP or DB
- Cloudification: changed to H2 to mixed mode with auto server to make it working in cloud environments
- Sessions: Added Session Store to persist sessions to database.
- Sessions: Sessions loaded from DB added to session tracking
- Session Overview: Adjusted last access time to show delta as hh:mm:ss instead of timestamp.
- User Management Groups: Added Groups as a special kind of Roles. In sharing option(e.g. Dashboards) users cannot choose Roles anymore but Groups only. 
- User Audit: Added audit mechanism to list the users permissions 
- Feature: Added Job Management for allowing users to schedule tasks.
- Dashboard Parameters: Fixed sanitation issues with select parameters
- Dashboard Widgets: Added capability to run tasks.
- JSRenderer - Dataviewer: Added setting to pre-process data before rendering.
- FileAssembly: Make sure to always generate new eTag and filename after a restart
- CFWField: New FormFieldType.LANGUAGE
- Navbar: Fixed display of submenus for narrow screens
- Audit Logs: set Level.OFF to always log audit logs
- Permissions: Added permission 'Dashboard Tasks'
- Menu: Added default Tools Menu
- CFWSQL: Can now be used for custom DBInterfaces.
- Manual: Updated existing manual pages
- Manual: Added page "Write Logs", "Add User Audit", "Add Job Tasks", "Working with Forms"
- Manual: Page Links working in PDFs

------- v3.0.1 -------
- Added Feature Management: Features can be implemented so that they can be enabled/disabled from the UI
- Added Key Value Pairs: CFWObject to easily store key/value pairs in the database
- Changed Widget Permissions: Instead of viewing, now create/edit will be allowed/dissallowed
- Logging: Added interceptor for sysout and syserr stream to not miss information in logs
- DB Analytics: Added Connection Pool Statistics
- DB Pools Registry: Override by default if pool already exists
- Docker: Added dockerfile for containerization
- Docker: Docker Image now keeps persistent data under "/data"
- H2 Fulltext Search: Columns can now be defined.
- CFWField: Added FormFieldType.LANGUAGE
- Renderer - XML: Added XML Renderer to javascript renderers
- CFWSecurity: Allow Forward slashes, makes URLs work without the need to set CFWField.allowHTML(true)
- CFWHttp: Added Request Details log (level FINER)

------- v3.0.0 -------
- Roles: Reload user roles when changed, no re-login required anymore(adding Permissions to role still requires relogin)
- Build: bumped various library versions to latest
- Data Viewer: Fixed displayed page count when PageSize:All is selected.
- CFW.Messages: Created separate class to handle default messages.
- Dashboard: Added refresh interval parameter to URL.
- Dashboard: Added Tags Field for Dashboards
- Dashboard: Added notification on widget setting save
- Dashboard: Made Advanced Edit Mode Standard
- Dashboard: Widgets that have errors can now be edited.
- Dashboard: added dashboardID to autocomplete requests
- Dashboard List: Added Sharing Details View
- Dashboard Widget Settings: Added Widget Name and splitted settings to tabs
- Role Management: Fixed Nullpointer on changing roles while API-Token Session is active.
- CFWHierarchy: First working version of hierarchy management for CFWObjects
- Panels: Added dynamic chevron icon for expanded/collapsed
- Manual: Change chevron icon when page gets expanded/collapsed
- Renderer - Charts: Make default Settings Global
- Renderer - Charts: Added settings "showaxes" and "padding" (can be used to create sparkline like charts)
- Renderer - Dataviewer: highlight filter field if not empty
- Renderer - Panels/Cards: Fixed display of buttons, not overlaying title
- cfw.js: Fixed time offset on CFW.format.millisToDuration() and CFW.format.millisToClock()
- LDAP: Added config to cfw.properties to enable custom LDAP queries
- ContextSettings: Restrict Access by Users and Roles

------- v2.0.1 -------
- /metrics: added counter for DB calls successful/failed
- /metrics: added counter for API calls
- /metrics: added counter for outgoing HTTP calls
- cfw_components.js >> CFWRenderer: Improved getTitleStringMethod.
- Chart Renderer: added parameter datamode
- Chart Renderer: Changed y axis to format big values as "xxx K" and "xxx M"
- Fixed assembly not refreshing unique etags on changed content
- API Token: Added reminder message to add permissions to newly created tokens
- Dashboard: Fixed double drawing on first opening
- Renderer Panels/Cards: Added narrow option
- Tags Selector: Hide input field when max tags are reached
- Dashboard: Added Loading Placeholder for Widgets

------- v2.0.0 -------
- CFWLog: auto detect method, making call to CFWLog.method() optional
- Reduced footprint of log
- Added System Analytics >> System Properties
- Added System Analytics >> Log Configuration
- Added System Analytics >> Session Overview
- Improved Caching with Guava
- Added caching for resolved proxy urls
- Added metrics for guava cache to prometheus endpoint
- Adjusted @license to MIT
- Added check for session timeout in browser when user is logged in 
- Modal: Reset scroll position on close 
- Prevent auto-fill on autocomplete fields
- Autocomplete: minimum characters before starting autocomplete(defaults to 3)
- Added support for SSO based on SAML
- Added SLF4J Service Provider to pickup logs from frameworks
- Fixed menus requiring permissions still showing after logout
- Fixed ContextSettings created with invalid field values
- CFW: Implement custom shutdown stopping database, application, features, etc...
- CFWSQL: Added simplified caching method CFWSQL.queryCache();
- /metrics: Added counters for log events
- renderer: added dataviewer renderer
- renderer: added csv renderer
- renderer: added cards renderer
- User Management: use dataviewer for user table
- Chart Renderer: fixed tooltip overflow, not cropped anymore.
- Added API Token Mechanism
- Added cfw_session_count to metrics 
- Moved timeout settings from cfw.properties to configuration page. (and added more timeout settings )
- Added Audit Logs for important actions (Like User Management CREATE, UPDATE, DELETE)
- Dashboard: Added Ruler to Edit Mode
- Dashboard: Added timeframe params to URL
- Dashboard List: Added Change Owner button for admins
- Dashboard List: Added Import/Export buttons for dashboard creators and admins
- Dashboard List: Added toast messages for special sharing settings(shared with all users, not shared but users or roles selected)
- Dashboard List: use dataviewer

------- v1.0.4 -------
- added check for Internet Explorer and print not supported message
- Fixed JDK11 reflection issue
- replaced all StringBuffer to StringBuilder
- Checkbox Widget: fixed positioning issue when clicking checkboxes after creation
- Context Settings: Fixed button display
- Code improvements from SonarQube findings
- Added System Analytics >> Servlet Context Tree
- Support Info: Use default Modal, make exceptions unique.
- Show previous toasts all toasts button
- Security: Add table class to Sanitizer for tables
- Added Widget Replica: Replicate Widget from other Dashboard
- Migrated test cases to JUnit 5

------- v.1.0.0 -------
- Manual: Print View Button
- Dashboard: Enable hierarchical categories
- CFW: Add loading icon to Form Submit button when waiting for reply.
- Theusinator: Fix Dropdown Issue
- Config: Added category panels to UI
- CFWField: Change Autocomplete to take only value/label input.
- CFWField: TAGS: Change to take value/label input.
- Security: Create Encryption/Decryption for DB
- Security: Configuration - do not send Passwords to Browser
- Security: Check Sanitation of Array Fields
- CFW: Configuration - Add feature to listen for config changes.
- Manual: Highlight and expand menu entry on page-parameter links
- Use addJSFileBottomSingle() instead of addJSFileBottomAssembly() where applicable
- Localization: create CFW.L()
- Localization: Improve localize cache names
- Widget Embed Video
- Dashboard: Edit to Done Button
- Dashboard: Add Title to Dashboard
- Dashboard: Refresh interval
- Dashboard: Create a dashboard using gridstack.js or similar >> https://dzone.com/articles/7-javascript-libraries-for-dashboards 
- XSS: Prevent and create Permissions Allow HTML and Allow Javascript
- PRIO 1: HTML Sanitizer OWASP with WYSIWIG, Allow HTML and or JAVASCRIPT
- Widget: WYSIWYG HTML
- Widget: List (Ordered, Unordered)
- Widget: Checklist
- Dashboard: Disable new widgets
- Muuuf widget definition to server side.
- implement dashboard allow edit only on permissions
- Implement dashboard load widgets
- Render Specific Settings
- change cookie name to CFWSESSIONID
- Create own file cfw_components.js
- Splitted assembly js/css into CFW defaults and customs for performance improvements.
- add description to widget
- Implement widget remove
- Change order of Settings for dashboards
- Tags: Load existing Tags
- Tags: Display Tags
- Tags: Save as Key Value Pairs
- Manual: Documentation Widget Creation
- Dashboard: Mobile View: Fix edit view
- Dashboard: Add Owner name to shared list
- Dashboard: Permission View All
- Dashboard: Management Page
- Dashboard: Duplicate Dashboard
