
ALWAYS ON
=========
- Create Manual Pages
- Cleanup console.log() and System.out.println()
- Localize
- Check special chars like äöüÄÖÜ in localization property files
- Check Copyrights
- Test Cases
- Test with cache enabled


IMPORTANT FIXES / TODOS
=============================
- Dashboard: Check and fix Undo/Redo
- Query: Save and Manage queries


Potential TODOs
===============

- Features: Automator: Just Actions that can be triggered from the UI.
  - Create Default Dashboards for xyz
  - Send Mails
  - Cleanup Actions

- Features: EAV Table plus API | Source | Widget | Dashboard Stats

- Features: Spaces
  - HTML Selector
  - SpacePermissions in SessionData
  - Selected Space in SessionData
  - CFWSQL partial query, select entries for user

- Jobs: Log Job Executions to DB, plus age out.
- Jobs: Define max number of instances.

- UserMgmt: Give users a list of groups.

- Dashboard: Check Settings - Provide a bulk action to show all settings of all widgets as an overview. 
- Dashboard: Text Alignment
- Dashboard: Merge forms, only one button.
- Dashboard: Widget Fullscreen
- Dashboard: Fit Squeeze
- Dashboard: Filter Widgets
- Dashboard: Check if resizing/dragging is possible on mobile.
- Dashboard: Default Error / No Access Tile
- Dashboard: Default No Data Tile
- Dashboard: Add Anchor Chooser to Image Widget
- Dashboard: Console with Logs
- Dashboard: Fix Replica Ctrl+Z on Duplicate
- Dashboard: Timeframe Picker - show Timeframe instead of "Custom Time"
- Dashboard: Timeframe Picker - List of Recent
- Dashboard: Presets like - Today, Yesterday - This Week, Last Week, This Month, Last Month etc...
- Dashboard: Compare Option
- Dashboard: List of all Shared dashboards with Request access button (send by notification)
- Dashboard Parameters: Form initialization: filter as well by form or formID to not mess with params with same name/ID

- Widget: CSV Chart
- Widget: Cards
- Widget: Panels
- Widget: Website Checker HTMLUnit
- Widget: Partial HTML Extractor
- Widget: Nest other Dashboards
- Widget: Fontawesome Icons
- Widget: Current Time Widget
- Widget: Last Refresh as MM:SS Ago, with threshhold colorizing when longer then x seconds or so
- Widget: Next Refresh as MM:SS
- Widget: Collaboration: Chat
- Widget: Collaboration: Logbook

- Query: Docs - Write Developers Manual dev_query.html
- Query: Docs - mimic template mechanism
- Query: Widget - Option to open query in Editor if user has permission
- Query: Improve Autocomplete
- Query: function: math ceil/floor/abs etc...
- Query: function: array() aggregation
- Query: function: length() should support arrays and objects
- Query: function: fieldshidden()
- Query: function: timeround()
- Query: function: timetruncate()
- Query: function: timediff()
- Query: Command record
- Query: Command resultmerge (merge columns by identifiers)
- Query: Command resultdelete (delete by name)
- Query: Command statsx (pivot)
- Query: Command formatfield - sparkline format (or new command)
- Query: arrayify (needed for subquery results)
- Query: Manual Page - How to create charts 
- Query: Mimic calling mimic working with meta()
- Query: Chart - Show data table option
- Query: Autocomplete - fix "F:" replace issue
- Query: Test cases
	- mimic remove first command
	- mimic remove last command
	- mimic remove command somewhere
	- metadata template
	- mimic calling mimic
	
- Charts Renderer: Add description to manual page "working with render".

- cfw.js: Create Value-Renderer, only show value in tile.
- cfw.js: Finish javascript CFWFormField
- cfw.js: Add Tic Tac Toe Loader for Long running requests
- cfw.js: Progress Bar Loader

- Security: SSO With ADFS
- Security: Enable Decryption for ResultSet to JSON on CFWSQL
- Security: Change login to two steps, first username, then password field 

- Manual: Functionality - Multi language pages
- Manual: Fulltext Search

- DB: Extensions - Periodic Report Tasks 
- DB: Add Feature to change connection pool limits for managed connection pools
- DB: Prometheus DB Pool statistics

- CFW: CFWApplicationExecutor - ForwardedRequestCustomizer make it work with reverse proxy
- CFW: Create javascript sanity check page
- CFW: CPU Sampling, add Charts
- CFW: Cleanup tasks for TageSelector references 
- CFW: Locales - Handle Global Locales separately
- CFW: Locales - Create System Analytics page showing all locale properties
- CFW: Config - Age Out Configuration
- CFW: Improve CFWHTTP.getClientIP()

- CFWMail: Add default CSS to eMails(e.g. displaying borders for tables) 
- CFWField: Add initFormField(method)
- CFWField: Form errors add to field.
 
- Image Upload for Summernote Editor
- Truncate too long toasts.
- Create Record Requests / Replay for Performance Tests

- Test: Jobs & Tasks
- Test: Dashboard Parameters
- Test: CFWSQL
- Test: CFWSQL Lucene Query
- Test: Authentication
- Test: CFWForm & Multiform
- Test: ResultSetUtils
- Test: Javascript?
- Test: Mail?
- Test: Servlets?

DONE
====

------- current -------
- BREAKING CODE CHANGE: Renaming of Threshold Fields and CSS-Classes
- BREAKING CODE CHANGE: refactoring of mapJsonToFields() to toggle sanitation
- BREAKING CODE CHANGE: Query function parameters changed - now()
- New Feature: Page Tutorials
- New Feature: Single-Sign-On with SAML and OpenID Connect
- New Feature: Database Extensions, moved over from EMP
- New Feature: Web Extensions, moved over from EMP
- New Feature: Export / Import of database backup scripts
- User Management: Added names of user/roles/group in delete confirmation popup
- User Management: Fixed toggle button in role-/group-/permission table showing wrong state when switching page
- Database: Added Feature 'Reindex Fulltext Search' to DB Analytics page
- Database: Added Alias CFW_ARRAY_DISTINCT
- CFWField: Added flag SERVER_SIDE_ONLY
- Dashboard: Settings - Added setting to start Dashboard in Fullscreen Mode
- Dashboard: Added favorite feature
- Dashboard: Added favorite icon in navbar
- Dashboard: Added favorite icon to dashboard title
- Dashboard: Added Bottom and Side Ruler in Edit Mode
- Dashboard: Complete rework of undo/redo functionality because of introduction of SERVER_SIDE_ONLY
- Dashboard: Copy widgets to clipboard does not copy task settings (Reason: Avoiding unintentional spamming of the jobs system)
- Dashboard: Added Time Created for dashboards
- Dashboard: Made list full with of window
- Dashboard: Send CFWTimeframe JsonObject in requests instead of multiple parameters
- Dashboard: Parameter - New Parameter type Query Select
- Dashboard: Parameter - New Parameter type Number
- Dashboard: Parameter - New Parameter type Dashboard IDs
- Dashboard: Added option to allow dashboard editors to edit settings 
- Dashboard: Added configuration to "Admin >> Configuration" to set default value for 'Is Shared' setting 
- Dashboard: Fixed Browser Back Button (Better History States) 
- Dashboard List: Added owner to admin shared details view
- Dashboard List: Added public link to shared and faved dashboards
- Dashboard List: Added shared global/not shared message when dashboard is created.
- Widgets: Added Py Script and Py Config Widgets
- Widgets: Created new Category 'Advanced'
- Widgets: Minimum width decreased 3 to 1, min height increased 1 to 2, action icons vanish when width < 3 
- Widgets: Added Widget Advanced >> Force Refresh
- Widgets: Reduced margin of widgets to use space more efficiently
- Widgets: Parameter Widget supports password verification before update
- Widgets: Parameter Widget supports custom button labels 
- Widgets: Parameter Widget supports choosing the widgets which are affected on update
- Widgets: Parameter Widget supports Chart Settings Field  
- Widgets: Settings marked with SERVER_SIDE_ONLY are not sent to the browser
- Widgets: Standard Settings - Make widgets invisible when outside of edit mode
- Widgets: Standard Settings - Added Settings to make widget loading manual
- Widgets: Standard Settings - Added Settings to make widget load only omn parameter widget button press
- Widgets: Label widget improved, dynamic syze factors and link can be opened in same window
- API: Added possibility to provide data in request body
- API: Improved examples generated on API UI 
- API: Endpoints sorted by name
- API: Tokens - Added field "Permissions of User" to make sure security can be kept for certain endpoints like Query.execute
- API: Added Endpoints:
    - Query.execute
    - User.addRole
    - User.create
    - User.setStatus
- Caching: Added Caches for user roles and permissions
- CFWChartSettings: Added FormFieldType and DataObject Class to manage Chart Settings
- JS Components: ToogleButton supports favorite style
- JS Renderer: field labels can now be defined with functions
- JS Renderer: Dataviewer - Added setting "menu" with "toggle" option
- JS Renderer: Tiles - fixed issue with removing alertstyle fields
- JS Renderer: Chart - Added options multichart/-title/-columns and height to render each series in it's own chart.
- JS Renderer: Chart - Added options details/-renderer/-size/-position to display the data of the chart.
- JS Renderer: Chart - Added support for chart types: pie, doughnut, radar, polar, sparkline, sparkarea, sparkbar
- JS Renderer: Status Map - fixed high CPU consumption issue
- JS Renderer: Status Map - removed renderer options with specific ratios
- JS Renderer: Status Map - improved performance by changing from flex to grid system
- JS Renderer: Improved performance by not pre-rendering popover contents (improved renderers: tiles, statusbar, statusmap, statuslist)
- JS Renderer: Upgrade ChartJS from v2.93 to v4.0.1
- JS Renderer: Added Tile and Status Bar Renderer(tileandbar)
- JS Renderer: Added Status Tiles Renderer, as a shorthand option to get empty tiles (statustiles)
- Utils: Added Undo/Redo Manager 
- Alert Channel: added method to support adding of additional text Data
- Validator: Added ExcludeStringsValidator
- Manual: Added Filter for Menu
- Manual: Added General section and more manual pages
- Query: Fixed Browser Back Button (Better History States) 
- Query: Performance - Dramatic improvement by removing throttling of threads (to make subqueries execute way faster)
- Query: Functions - Added tags to functions
- Query: Manual - Added list of functions by tags to page Query >> Functions 
- Query: Job Task - Added "Alerting: CFWQL Query"
- Query: Editor - Fixed issues with html characters like "<" or ">"
- Query: Editor - Fixed issues Ctrl+Alt+Arrow not copying last character of row & missing newline on first row
- Query: Parsing - Return Debug info in case of  errors
- Query: Parsing - Added detection of endless looping and prevention of OutOfMemoryError
- Query: Widget Query Results - Prevent saving queries with parsing issues and when permissions are missing.
- Query: Widget Query Results - Added Task Support for alerting.
- Query: Fixed Comma after Binary Expression breaks query by creating array in the wrong place
- Query: Loader does not block query editor
- Query: Support time parameters ($earliest$ ...) in query editor
- Query: URL is updated on each execution, even if the query fails
- Query: Modulo operator('%') is now supported by the CFWQL syntax
- Query: Added API endpoint "Query >> execute"
- Query: Command: formatfield - added percent formatter
- Query: Command: formatfield - added list formatter
- Query: Command: metadata - added special property "template"
- Query: Command: sort - improved to sort alpha-numerical
- Query: Autocomplete - Added Open Manual Button 
- Query: Autocomplete - Added "f:" to get list of functions
- Query: Autocomplete - Added "f:xxx" to get list of filtered functions
- Query: Autocomplete - Added "xxx(" to get description of function
- Query: Added Sources:
	- empty
	- text
	- web 
- Query: Added commands: 
	- crates
	- execute
	- mimic
	- nullto
	- resultcompare
	- resultconcat
	- resultcopy
	- statsmatrix
	- unbox
- Query: Added functions:
	- abs
	- ceil 
	- cos
	- decode
	- earliest
	- earliestSet
	- fields
	- first
	- floor
	- last
	- latest
	- latestSet
	- now
	- random
	- randomfloat
	- randomfrom
	- replace
	- sin
	- subquery
	- tan
	- timeformat
	- timeframeoffset
	- timeoffset
	- timeparse
	- tojson
	- type
	

------- v.7.0.0 -------
- BREAKING CODE CHANGE: Added 1 minute cache for widget data.
- BREAKING CODE CHANGE: Changing CFWHierarchy to use Lineage instead of single column for every parent.
- BREAKING CODE CHANGE: CFWDB and DBInterface - Renaming of transaction handling methods
- Security Improvement: SessionData not stored in InheritableThreadLocal
- Audit: Audit logs get written to database.
- Error Page: Added custom error page for unhandled exceptions
- CFWField: Prevent autofill of password fields in forms
- CFWField: Added support for number arrays
- Timeframe Picker: Added custom Relative Offset
- Job Task Widget Executor: Added timeframe picker tho handle time placeholders like $earliest and $latest
- H2: Upgraded to 2.1.212
- gridstack.js: upgraded from v0.6.0 to v5.1.0
- Tiles Renderer: Made popup configurable
- JSRenderer: Added Status Bar Renderer
- JSRenderer: Added Status Map Renderer
- JSRenderer: Added Status List Renderer
- JSRenderer: Table renderer supports hierarchical structures
- JSRenderer: Panel renderer supports hierarchical structures
- JSRenderer: DataViewer renderer adjusted for hierarchical structures
- Widget Website: Removed sandbox attribute from iframe.
- WidgetSettings: Added option to define title position(top, left)
- WidgetSettings: Added option to define a link for the title.
- Chart Renderer: Sorting datasets to avoid displaying issues
- Dashboard: Added Permission to allow Users to refresh dashboard every minute 
- Dashboard: Added Permission to allow Users to create public links for dashboards
- Dashboard: Fixed destruction of widget layout, resizing window width to change into 1 column layout disabled
- Dashboard: Added Javascript Widget
- Config: Added Password Policy Settings
- Query: Created CFWContextAwareExecutor for proper context propagation.
- Query: Added source "auditlog" to CFWQL
- Query: Added source "threaddump" to CFWQL
- Query: Fixed Binary Expression messing with parsing when in an array
- Query: Fixed Binary Expression "==" throwing NullPointerException when left side is null and right side is a string.
- Query: Interrupt execution in case of exception(prevents hanging threads)
- Query: Added configuration to limit query execution time to prevent long running queries and hanging threads.
- Query: Added new renderers to Query
- Query: Make results 100% height in dashboard widget
- Query: Added set Command
- Query: Added chart Command
- Query: Added stats Command
- Query: Added Functions feature to query framework
- Query: Added functions: 
	- avg
	- clone
	- count
	- countnulls
	- encode
	- extract
	- globals
	- if
	- indexof
	- lastindexof
	- length
	- max
	- median
	- meta
	- min
	- nullto
	- perc
	- round
	- stdev
	- substring
	- sum
	- trim


------- v6.0.0 -------
- New Feature - Query: Domain Specific Language(DSL) to fetch, process and format data from various sources
- New Feature - Notification: Added Notification mechanism to notify user in the UI. Bell icon added to the Menu Bar 
- BREAKING CHANGE - H2 Migration: bumped from v1.4.200 to 2.0.206
- Migrated jQuery from 3.4.1 to 3.6.0
- Migrated highlight.js from v9 to v11
- Migrated Guava from v30.0 to v31.0
- Notifications: Added Startup Notifications for Admins and Superusers
- Alerting: Added Channel for Notifications
- Dashboard: Added option to make dashboards publicly available(public url, no user login needed).
- Dashboard: Added Copy Action to Widgets, can be Pasted to other dashboards using Ctrl-V
- Menu: Fixed Display issue for Navbar Buttons(Manual) when menu is collapsed on narrow displays 
- ContextSettings: Added method to fetch by user and type
- Javascript Renderer: Added sorting mechanism.
- Context Settings: Use Dataviewer for display
- JDBC Drivers: Added Configuration Item to specify custom driver classes, added default validation Query to avoid AbstractMethodError for isValid()
- Autocomplete: Added support to trigger with Control+Space, option to define title for item lists
- Dataviewer: Fixed issue with quotes in filter
- JS Renderer: Added support for custom colors without the need to use CFW color classes
- Properties: added cfw_jvm_timezone=UTC for H2 to handle time properly

------- v5.0.0 -------
- Mailing: Added Class CFWMailBuilder for creating eMails.
- Dashboard: Security Improvement - Use data from server side instead from client side.
- Dashboard Widgets: Added caching for widget data.
- Dashboard: Parameters working better, also applied in autocomplete of edit widget forms and parameter widget.
- Authentication - LDAP: Load user details from LDAP if the do not exists in the database.
- Reflection: Replaced with ServiceLoader as it is more stable between different Java versions
- Scripting: Migrated Javascript Engine from Nashorn to Graal to be able to run under higher Java Versions.
- CFWField: Added FormFieldType.CHECKBOXES
- Menu Title: Added configuration option to prepend menu title to window title
- Tasks: Added Task to test eMail setup
- Jobs: Added Utilities to do Alerting.
- Jobs: Task Selection shows now a table with the task description.
- Properties: added config "cfw_application_url" to be able to add links to mails.
- API: Added Default Create API
- CSV Renderer: CSV Supports foreground and background color
- CSV Renderer: Table makes buttons smaller when narrow is true
- User Management: Use Dataviewer for Groups/Roles/Permissions toggle table 
- Dataviewer Renderer: Added Sortby-Field
- FulltextSearch: wrapped Lucene Query in SELECT to make further  WHERE clauses more stable
- CFWSQL: Added method for default pagination
- /metrics: Fixed session count for API calls 
- Tiles: Fixed size factor set to 0.1 when loaded and whole number was selected
- Sessions: Added cleanup of stored session on app startup to avoid issues.

------- v4.0.0 -------
- Startup Mode: added property cfw_mode to cfw.properties, start application as FULL, APP or DB
- Cloudification: changed to H2 to mixed mode with auto server to make it working in cloud environments
- Sessions: Added Session Store to persist sessions to database.
- Sessions: Sessions loaded from DB added to session tracking
- Session Overview: Adjusted last access time to show delta as hh:mm:ss instead of timestamp.
- User Management Groups: Added Groups as a special kind of Roles. In sharing option(e.g. Dashboards) users cannot choose Roles anymore but Groups only. 
- User Audit: Added audit mechanism to list the users permissions 
- Feature: Added Job Management for allowing users to schedule tasks.
- Dashboard Parameters: Fixed sanitation issues with select parameters
- Dashboard Widgets: Added capability to run tasks.
- JSRenderer - Dataviewer: Added setting to pre-process data before rendering.
- FileAssembly: Make sure to always generate new eTag and filename after a restart
- CFWField: New FormFieldType.LANGUAGE
- Navbar: Fixed display of submenus for narrow screens
- Audit Logs: set Level.OFF to always log audit logs
- Permissions: Added permission 'Dashboard Tasks'
- Menu: Added default Tools Menu
- CFWSQL: Can now be used for custom DBInterfaces.
- Manual: Updated existing manual pages
- Manual: Added page "Write Logs", "Add User Audit", "Add Job Tasks", "Working with Forms"
- Manual: Page Links working in PDFs

------- v3.0.1 -------
- Added Feature Management: Features can be implemented so that they can be enabled/disabled from the UI
- Added Key Value Pairs: CFWObject to easily store key/value pairs in the database
- Changed Widget Permissions: Instead of viewing, now create/edit will be allowed/dissallowed
- Logging: Added interceptor for sysout and syserr stream to not miss information in logs
- DB Analytics: Added Connection Pool Statistics
- DB Pools Registry: Override by default if pool already exists
- Docker: Added dockerfile for containerization
- Docker: Docker Image now keeps persistent data under "/data"
- H2 Fulltext Search: Columns can now be defined.
- CFWField: Added FormFieldType.LANGUAGE
- Renderer - XML: Added XML Renderer to javascript renderers
- CFWSecurity: Allow Forward slashes, makes URLs work without the need to set CFWField.allowHTML(true)
- CFWHttp: Added Request Details log (level FINER)

------- v3.0.0 -------
- Roles: Reload user roles when changed, no re-login required anymore(adding Permissions to role still requires relogin)
- Build: bumped various library versions to latest
- Data Viewer: Fixed displayed page count when PageSize:All is selected.
- CFW.Messages: Created separate class to handle default messages.
- Dashboard: Added refresh interval parameter to URL.
- Dashboard: Added Tags Field for Dashboards
- Dashboard: Added notification on widget setting save
- Dashboard: Made Advanced Edit Mode Standard
- Dashboard: Widgets that have errors can now be edited.
- Dashboard: added dashboardID to autocomplete requests
- Dashboard List: Added Sharing Details View
- Dashboard Widget Settings: Added Widget Name and splitted settings to tabs
- Role Management: Fixed Nullpointer on changing roles while API-Token Session is active.
- CFWHierarchy: First working version of hierarchy management for CFWObjects
- Panels: Added dynamic chevron icon for expanded/collapsed
- Manual: Change chevron icon when page gets expanded/collapsed
- Renderer - Charts: Make default Settings Global
- Renderer - Charts: Added settings "showaxes" and "padding" (can be used to create sparkline like charts)
- Renderer - Dataviewer: highlight filter field if not empty
- Renderer - Panels/Cards: Fixed display of buttons, not overlaying title
- cfw.js: Fixed time offset on CFW.format.millisToDuration() and CFW.format.millisToClock()
- LDAP: Added config to cfw.properties to enable custom LDAP queries
- ContextSettings: Restrict Access by Users and Roles

------- v2.0.1 -------
- /metrics: added counter for DB calls successful/failed
- /metrics: added counter for API calls
- /metrics: added counter for outgoing HTTP calls
- cfw_components.js >> CFWRenderer: Improved getTitleStringMethod.
- Chart Renderer: added parameter datamode
- Chart Renderer: Changed y axis to format big values as "xxx K" and "xxx M"
- Fixed assembly not refreshing unique etags on changed content
- API Token: Added reminder message to add permissions to newly created tokens
- Dashboard: Fixed double drawing on first opening
- Renderer Panels/Cards: Added narrow option
- Tags Selector: Hide input field when max tags are reached
- Dashboard: Added Loading Placeholder for Widgets

------- v2.0.0 -------
- CFWLog: auto detect method, making call to CFWLog.method() optional
- Reduced footprint of log
- Added System Analytics >> System Properties
- Added System Analytics >> Log Configuration
- Added System Analytics >> Session Overview
- Improved Caching with Guava
- Added caching for resolved proxy urls
- Added metrics for guava cache to prometheus endpoint
- Adjusted @license to MIT
- Added check for session timeout in browser when user is logged in 
- Modal: Reset scroll position on close 
- Prevent auto-fill on autocomplete fields
- Autocomplete: minimum characters before starting autocomplete(defaults to 3)
- Added support for SSO based on SAML
- Added SLF4J Service Provider to pickup logs from frameworks
- Fixed menus requiring permissions still showing after logout
- Fixed ContextSettings created with invalid field values
- CFW: Implement custom shutdown stopping database, application, features, etc...
- CFWSQL: Added simplified caching method CFWSQL.queryCache();
- /metrics: Added counters for log events
- renderer: added dataviewer renderer
- renderer: added csv renderer
- renderer: added cards renderer
- User Management: use dataviewer for user table
- Chart Renderer: fixed tooltip overflow, not cropped anymore.
- Added API Token Mechanism
- Added cfw_session_count to metrics 
- Moved timeout settings from cfw.properties to configuration page. (and added more timeout settings )
- Added Audit Logs for important actions (Like User Management CREATE, UPDATE, DELETE)
- Dashboard: Added Ruler to Edit Mode
- Dashboard: Added timeframe params to URL
- Dashboard List: Added Change Owner button for admins
- Dashboard List: Added Import/Export buttons for dashboard creators and admins
- Dashboard List: Added toast messages for special sharing settings(shared with all users, not shared but users or roles selected)
- Dashboard List: use dataviewer

------- v1.0.4 -------
- added check for Internet Explorer and print not supported message
- Fixed JDK11 reflection issue
- replaced all StringBuffer to StringBuilder
- Checkbox Widget: fixed positioning issue when clicking checkboxes after creation
- Context Settings: Fixed button display
- Code improvements from SonarQube findings
- Added System Analytics >> Servlet Context Tree
- Support Info: Use default Modal, make exceptions unique.
- Show previous toasts all toasts button
- Security: Add table class to Sanitizer for tables
- Added Widget Replica: Replicate Widget from other Dashboard
- Migrated test cases to JUnit 5

------- v.1.0.0 -------
- Manual: Print View Button
- Dashboard: Enable hierarchical categories
- CFW: Add loading icon to Form Submit button when waiting for reply.
- Theusinator: Fix Dropdown Issue
- Config: Added category panels to UI
- CFWField: Change Autocomplete to take only value/label input.
- CFWField: TAGS: Change to take value/label input.
- Security: Create Encryption/Decryption for DB
- Security: Configuration - do not send Passwords to Browser
- Security: Check Sanitation of Array Fields
- CFW: Configuration - Add feature to listen for config changes.
- Manual: Highlight and expand menu entry on page-parameter links
- Use addJSFileBottomSingle() instead of addJSFileBottomAssembly() where applicable
- Localization: create CFW.L()
- Localization: Improve localize cache names
- Widget Embed Video
- Dashboard: Edit to Done Button
- Dashboard: Add Title to Dashboard
- Dashboard: Refresh interval
- Dashboard: Create a dashboard using gridstack.js or similar >> https://dzone.com/articles/7-javascript-libraries-for-dashboards 
- XSS: Prevent and create Permissions Allow HTML and Allow Javascript
- PRIO 1: HTML Sanitizer OWASP with WYSIWIG, Allow HTML and or JAVASCRIPT
- Widget: WYSIWYG HTML
- Widget: List (Ordered, Unordered)
- Widget: Checklist
- Dashboard: Disable new widgets
- Muuuf widget definition to server side.
- implement dashboard allow edit only on permissions
- Implement dashboard load widgets
- Render Specific Settings
- change cookie name to CFWSESSIONID
- Create own file cfw_components.js
- Splitted assembly js/css into CFW defaults and customs for performance improvements.
- add description to widget
- Implement widget remove
- Change order of Settings for dashboards
- Tags: Load existing Tags
- Tags: Display Tags
- Tags: Save as Key Value Pairs
- Manual: Documentation Widget Creation
- Dashboard: Mobile View: Fix edit view
- Dashboard: Add Owner name to shared list
- Dashboard: Permission View All
- Dashboard: Management Page
- Dashboard: Duplicate Dashboard
